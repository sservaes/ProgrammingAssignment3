stop
}
data[, 11] <- as.numeric(data[, 11])
sorted <- data[order(data[,11]), ]
result <- sorted[num, 2]
return(result)
}
rankhospital("TX", "heart failure", 4)
rankhospital <- function(state, outcome, num = "best") {
## read outcome data
dataSet <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## check state and outcome
listOutcome <- c("heart failure", "heart attack", "pneumonia")
if (!state %in% dataSet[, "State"]) {
stop("invalid state")
}
if (!outcome %in% listOutcome) {
stop("invalid outcome")
}
## return hospital in that state with the given rank
good <- dataSet[, "State"] == state
data <- dataSet[good, ]
if (outcome == "heart attack") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
} else if (outcome == "heart failure") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
} else if (outcome == "pneumonia") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
} else {
print
stop
}
data[, 11] <- as.numeric(data[, 11])
sorted <- data[order(data[,11]), ]
result <- sorted[num, 11]
return(result)
}
rankhospital("TX", "heart failure", 4)
View(data)
View(dataSet)
good <- dataSet[,"State"] == "TX"
data <- dataset[good, ]
data <- dataSet[good, ]
View(data)
data[,11] <- as.numeric(data[,11])
sorted <- data[order(data[,11]), ]
View(sorted)
rankhospital <- function(state, outcome, num = "best") {
## read outcome data
dataSet <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## check state and outcome
listOutcome <- c("heart failure", "heart attack", "pneumonia")
if (!state %in% dataSet[, "State"]) {
stop("invalid state")
}
if (!outcome %in% listOutcome) {
stop("invalid outcome")
}
## return hospital in that state with the given rank
good <- dataSet[, "State"] == state
data <- dataSet[good, ]
if (outcome == "heart attack") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
} else if (outcome == "heart failure") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
} else if (outcome == "pneumonia") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
} else {
print
stop
}
data[, outcome] <- as.numeric(data[, outcome])
sorted <- data[order(data[,outcome]), ]
result <- sorted[num, outcome]
return(result)
}
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 4)
rankhospital <- function(state, outcome, num = "best") {
## read outcome data
dataSet <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## check state and outcome
listOutcome <- c("heart failure", "heart attack", "pneumonia")
if (!state %in% dataSet[, "State"]) {
stop("invalid state")
}
if (!outcome %in% listOutcome) {
stop("invalid outcome")
}
## return hospital in that state with the given rank
good <- dataSet[, "State"] == state
data <- dataSet[good, ]
if (outcome == "heart attack") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
} else if (outcome == "heart failure") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
} else if (outcome == "pneumonia") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}
data[, outcome] <- as.numeric(data[, outcome])
sorted <- data[order(data[, outcome]), ]
result <- sorted[num, 2]
return(result)
}
rankhospital("TX", "heart failure", 4)
rankhospital <- function(state, outcome, num = "best") {
## read outcome data
dataSet <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## check state and outcome
listOutcome <- c("heart failure", "heart attack", "pneumonia")
if (!state %in% dataSet[, "State"]) {
stop("invalid state")
}
if (!outcome %in% listOutcome) {
stop("invalid outcome")
}
## return hospital in that state with the given rank
good <- dataSet[, "State"] == state
data <- dataSet[good, ]
if (outcome == "heart attack") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
} else if (outcome == "heart failure") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
} else if (outcome == "pneumonia") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}
data[, outcome] <- as.numeric(data[, outcome])
sorted <- data[order(data[, 11]), ]
result <- sorted[num, 2]
return(result)
}
rankhospital("TX", "heart failure", 4)
rankhospital <- function(state, outcome, num = "best") {
## read outcome data
dataSet <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## check state and outcome
listOutcome <- c("heart failure", "heart attack", "pneumonia")
if (!state %in% dataSet[, "State"]) {
stop("invalid state")
}
if (!outcome %in% listOutcome) {
stop("invalid outcome")
}
## return hospital in that state with the given rank
good <- dataSet[, "State"] == state
data <- dataSet[good, ]
if (outcome == "heart attack") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
} else if (outcome == "heart failure") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
} else if (outcome == "pneumonia") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}
data[, 11] <- as.numeric(data[, 11])
sorted <- data[order(data[, 11]), ]
result <- sorted[num, 2]
return(result)
}
rankhospital("TX", "heart failure", 4)
rankhospital <- function(state, outcome, num = "best") {
## read outcome data
dataSet <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## check state and outcome
listOutcome <- c("heart failure", "heart attack", "pneumonia")
if (!state %in% dataSet[, "State"]) {
stop("invalid state")
}
if (!outcome %in% listOutcome) {
stop("invalid outcome")
}
## return hospital in that state with the given rank
good <- dataSet[, "State"] == state
data <- dataSet[good, ]
if (outcome == "heart attack") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
} else if (outcome == "heart failure") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
} else if (outcome == "pneumonia") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}
data[, mortality] <- as.numeric(data[, mortality])
sorted <- data[order(data[, mortality]), ]
result <- sorted[num, 2]
return(result)
}
rankhospital("TX", "heart failure", 4)
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
data[, mortality] <- as.numeric(data[, mortality])
sorted <- data[order(data[, mortality]), ]
View(sorted)
sorted <- data[order(data[, mortality], data [,2]), ]
View(sorted)
rankhospital("TX", "heart failure", 4)
rankhospital <- function(state, outcome, num = "best") {
## read outcome data
dataSet <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## check state and outcome
listOutcome <- c("heart failure", "heart attack", "pneumonia")
if (!state %in% dataSet[, "State"]) {
stop("invalid state")
}
if (!outcome %in% listOutcome) {
stop("invalid outcome")
}
## return hospital in that state with the given rank
good <- dataSet[, "State"] == state
data <- dataSet[good, ]
if (outcome == "heart attack") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
} else if (outcome == "heart failure") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
} else if (outcome == "pneumonia") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}
suppressWarnings(data[, mortality] <- as.numeric(data[, mortality]))
sorted <- data[order(data[, mortality], data [,2]), ]
result <- sorted[num, 2]
return(result)
}
rankhospital("TX", "heart failure", 4)
ncol(data)
nrow(data)
rankhospital <- function(state, outcome, num = "best") {
## read outcome data
dataSet <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## check state and outcome
listOutcome <- c("heart failure", "heart attack", "pneumonia")
if (!state %in% dataSet[, "State"]) {
stop("invalid state")
}
if (!outcome %in% listOutcome) {
stop("invalid outcome")
}
## return hospital in that state with the given rank
good <- dataSet[, "State"] == state
data <- dataSet[good, ]
if (num=="best") {
num <- 1
} else if (num=="worst") {
num <- nrow(data)
} else if (num> nrow(data))
return("NA")
if (outcome == "heart attack") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
} else if (outcome == "heart failure") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
} else if (outcome == "pneumonia") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}
suppressWarnings(data[, mortality] <- as.numeric(data[, mortality]))
sorted <- data[order(data[, mortality], data [,2]), ]
result <- sorted[num, 2]
return(result)
}
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
rankhospital("MD", "heart failure", "worst")
View(sorted)
rankhospital("TX", "heart failure", "worst")
View(newSet)
View(sorter)
View(sorter)
View(sorted)
View(sorted)
data[!is.na()]
data[!is.na]
data[!is.na(data)]
data[!is.na(data[,11])]
is.na(data[, 11])
bad <- is.na(data[, mortality])
data[!bad]
data[!bad,]
data2 <- data[!bad,]
View(data2)
best <- function(state, outcome) {
## Read outcome data
dataSet <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check state and outcome
listOutcome <- c("heart failure", "heart attack", "pneumonia")
if (!state %in% dataSet[, "State"]) {
stop("invalid state")
}
if (!outcome %in% listOutcome) {
stop("invalid outcome")
}
## return hospital with lowest 30-day death rate
good <- dataSet[, "State"] == state
data <- dataSet[good, ]
if (outcome == "heart attack") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
} else if (outcome == "heart failure") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
} else if (outcome == "pneumonia") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}
bad <- is.na(data[, mortality])
data <- data[!bad, ]
lowest <- suppressWarnings(which.min(data[, mortality]))
result <- data[lowest, 2]
return(result)
}
rankhospital("TX", "heart failure", "worst")
rankhospital("MD", "heart attack", "worst")
rankhospital <- function(state, outcome, num = "best") {
## read outcome data
dataSet <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## check state and outcome
listOutcome <- c("heart failure", "heart attack", "pneumonia")
if (!state %in% dataSet[, "State"]) {
stop("invalid state")
}
if (!outcome %in% listOutcome) {
stop("invalid outcome")
}
## return hospital in that state with the given rank
good <- dataSet[, "State"] == state
data <- dataSet[good, ]
if (num=="best") {
num <- 1
} else if (num=="worst") {
num <- nrow(data)
} else if (num> nrow(data))
return("NA")
if (outcome == "heart attack") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
} else if (outcome == "heart failure") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
} else if (outcome == "pneumonia") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}
bad <- is.na(data[, mortality])
data <- data[!bad, ]
suppressWarnings(data[, mortality] <- as.numeric(data[, mortality]))
sorted <- data[order(data[, mortality], data [,2]), ]
result <- sorted[num, 2]
return(result)
}
rankhospital("MD", "heart attack", "worst")
dataSet <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
good <- dataSet[, "State"] == "MD"
data <- dataSet[good, ]
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
bad <- is.na(data[, mortality])
data <- data[!bad, ]
suppressWarnings(data[, mortality] <- as.numeric(data[, mortality]))
sorted <- data[order(data[, mortality], data [,2]), ]
View(sorted)
rankhospital <- function(state, outcome, num = "best") {
## read outcome data
dataSet <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## check state and outcome
listOutcome <- c("heart failure", "heart attack", "pneumonia")
if (!state %in% dataSet[, "State"]) {
stop("invalid state")
}
if (!outcome %in% listOutcome) {
stop("invalid outcome")
}
## return hospital in that state with the given rank
good <- dataSet[, "State"] == state
data <- dataSet[good, ]
if (num=="best") {
num <- 1
} else if (num=="worst") {
num <- nrow(data)
} else if (num> nrow(data))
return("NA")
if (outcome == "heart attack") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
} else if (outcome == "heart failure") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
} else if (outcome == "pneumonia") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}
suppressWarnings(data[, mortality] <- as.numeric(data[, mortality]))
bad <- is.na(data[, mortality])
data <- data[!bad, ]
sorted <- data[order(data[, mortality], data [,2]), ]
result <- sorted[num, 2]
return(result)
}
rankhospital("MD", "heart attack", "worst")
rm(bad)
rm(good)
rm(sorted)
rm(data)
good <- dataSet[, "State"] == "state"MD
good <- dataSet[, "State"] == "MD"
data <- dataSet[good, ]
suppressWarnings(data[, mortality] <- as.numeric(data[, mortality]))
View(data)
bad <- is.na(data[, mortality])
bad
newData <- data[!bad, ]
View(newData)
sorted <- newData[order(newData[, mortality], newData [,2]), ]
View(sorted)
rankhospital <- function(state, outcome, num = "best") {
## read outcome data
dataSet <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## check state and outcome
listOutcome <- c("heart failure", "heart attack", "pneumonia")
if (!state %in% dataSet[, "State"]) {
stop("invalid state")
}
if (!outcome %in% listOutcome) {
stop("invalid outcome")
}
## return hospital in that state with the given rank
good <- dataSet[, "State"] == state
data <- dataSet[good, ]
if (num=="best") {
num <- 1
} else if (num=="worst") {
num <- nrow(data)
} else if (num> nrow(data))
return("NA")
if (outcome == "heart attack") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
} else if (outcome == "heart failure") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
} else if (outcome == "pneumonia") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}
suppressWarnings(data[, mortality] <- as.numeric(data[, mortality]))
bad <- is.na(data[, mortality])
data <- data[!bad, ]
sorted <- data[order(data[, mortality], data [,2]), ]
result <- sorted[num, 2]
return(result)
}
rankhospital("MD", "heart attack", "worst")
rankhospital <- function(state, outcome, num = "best") {
## read outcome data
dataSet <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## check state and outcome
listOutcome <- c("heart failure", "heart attack", "pneumonia")
if (!state %in% dataSet[, "State"]) {
stop("invalid state")
}
if (!outcome %in% listOutcome) {
stop("invalid outcome")
}
## return hospital in that state with the given rank
good <- dataSet[, "State"] == state
data <- dataSet[good, ]
if (outcome == "heart attack") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
} else if (outcome == "heart failure") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
} else if (outcome == "pneumonia") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}
suppressWarnings(data[, mortality] <- as.numeric(data[, mortality]))
bad <- is.na(data[, mortality])
data <- data[!bad, ]
sorted <- data[order(data[, mortality], data [,2]), ]
if (num == "best") {
num <- 1
} else if (num == "worst") {
num <- nrow(data)
} else if (num > nrow(data))
return("NA")
result <- sorted[num, 2]
return(result)
}
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
rankhospital <- function(state, outcome, num = "best") {
## read outcome data
dataSet <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## check state and outcome
listOutcome <- c("heart failure", "heart attack", "pneumonia")
if (!state %in% dataSet[, "State"]) {
stop("invalid state")
}
if (!outcome %in% listOutcome) {
stop("invalid outcome")
}
## return hospital in that state with the given rank
good <- dataSet[, "State"] == state
data <- dataSet[good, ]
if (outcome == "heart attack") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"
} else if (outcome == "heart failure") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"
} else if (outcome == "pneumonia") {
mortality <- "Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia"
}
suppressWarnings(data[, mortality] <- as.numeric(data[, mortality]))
bad <- is.na(data[, mortality])
data <- data[!bad, ]
sorted <- data[order(data[, mortality], data [,2]), ]
if (num == "best") {
num <- 1
} else if (num == "worst") {
num <- nrow(data)
} else if (num > nrow(data))
return(NA)
result <- sorted[num, 2]
return(result)
}
rankhospital("MN", "heart attack", 5000)
source("submitscript3.R")
source("submitscript3.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
source("submitscript3.R")
submit()
submit()
submit()
submit()
